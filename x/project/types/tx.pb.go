// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: kaiju/project/v1/tx.proto

package types

import (
	context "context"
	encoding_json "encoding/json"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	github_com_tessornetwork_kaiju_x_iid_types "github.com/tessornetwork/kaiju/x/iid/types"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgCreateProject defines a message for creating a project.
type MsgCreateProject struct {
	TxHash         string                                                 `protobuf:"bytes,1,opt,name=tx_hash,json=txHash,proto3" json:"txHash" yaml:"txHash"`
	SenderDid      github_com_tessornetwork_kaiju_x_iid_types.DIDFragment `protobuf:"bytes,2,opt,name=sender_did,json=senderDid,proto3,casttype=github.com/tessornetwork/kaiju/x/iid/types.DIDFragment" json:"senderDid" yaml:"senderDid"`
	ProjectDid     string                                                 `protobuf:"bytes,3,opt,name=project_did,json=projectDid,proto3" json:"projectDid" yaml:"projectDid"`
	PubKey         string                                                 `protobuf:"bytes,4,opt,name=pub_key,json=pubKey,proto3" json:"pubKey" yaml:"pubKey"`
	Data           encoding_json.RawMessage                               `protobuf:"bytes,5,opt,name=data,proto3,casttype=encoding/json.RawMessage" json:"data,omitempty" yaml:"iid"`
	ProjectAddress string                                                 `protobuf:"bytes,6,opt,name=project_address,json=projectAddress,proto3" json:"project_address" yaml:"project_address"`
}

func (m *MsgCreateProject) Reset()      { *m = MsgCreateProject{} }
func (*MsgCreateProject) ProtoMessage() {}
func (*MsgCreateProject) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab44b99427fc0961, []int{0}
}
func (m *MsgCreateProject) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateProject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateProject.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateProject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateProject.Merge(m, src)
}
func (m *MsgCreateProject) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateProject) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateProject.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateProject proto.InternalMessageInfo

func (m *MsgCreateProject) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *MsgCreateProject) GetSenderDid() github_com_tessornetwork_kaiju_x_iid_types.DIDFragment {
	if m != nil {
		return m.SenderDid
	}
	return ""
}

func (m *MsgCreateProject) GetProjectDid() string {
	if m != nil {
		return m.ProjectDid
	}
	return ""
}

func (m *MsgCreateProject) GetPubKey() string {
	if m != nil {
		return m.PubKey
	}
	return ""
}

func (m *MsgCreateProject) GetData() encoding_json.RawMessage {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *MsgCreateProject) GetProjectAddress() string {
	if m != nil {
		return m.ProjectAddress
	}
	return ""
}

// MsgCreateProjectResponse defines the Msg/CreateProject response type.
type MsgCreateProjectResponse struct {
}

func (m *MsgCreateProjectResponse) Reset()         { *m = MsgCreateProjectResponse{} }
func (m *MsgCreateProjectResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateProjectResponse) ProtoMessage()    {}
func (*MsgCreateProjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab44b99427fc0961, []int{1}
}
func (m *MsgCreateProjectResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateProjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateProjectResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateProjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateProjectResponse.Merge(m, src)
}
func (m *MsgCreateProjectResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateProjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateProjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateProjectResponse proto.InternalMessageInfo

// MsgUpdateProjectStatus defines a message for updating a project's current
// status.
type MsgUpdateProjectStatus struct {
	TxHash         string                                                 `protobuf:"bytes,1,opt,name=tx_hash,json=txHash,proto3" json:"txHash" yaml:"txHash"`
	SenderDid      github_com_tessornetwork_kaiju_x_iid_types.DIDFragment `protobuf:"bytes,2,opt,name=sender_did,json=senderDid,proto3,casttype=github.com/tessornetwork/kaiju/x/iid/types.DIDFragment" json:"senderDid" yaml:"senderDid"`
	ProjectDid     string                                                 `protobuf:"bytes,3,opt,name=project_did,json=projectDid,proto3" json:"projectDid" yaml:"projectDid"`
	Data           UpdateProjectStatusDoc                                 `protobuf:"bytes,4,opt,name=data,proto3" json:"data" yaml:"iid"`
	ProjectAddress string                                                 `protobuf:"bytes,5,opt,name=project_address,json=projectAddress,proto3" json:"project_address" yaml:"project_address"`
}

func (m *MsgUpdateProjectStatus) Reset()         { *m = MsgUpdateProjectStatus{} }
func (m *MsgUpdateProjectStatus) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateProjectStatus) ProtoMessage()    {}
func (*MsgUpdateProjectStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab44b99427fc0961, []int{2}
}
func (m *MsgUpdateProjectStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateProjectStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateProjectStatus.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateProjectStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateProjectStatus.Merge(m, src)
}
func (m *MsgUpdateProjectStatus) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateProjectStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateProjectStatus.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateProjectStatus proto.InternalMessageInfo

func (m *MsgUpdateProjectStatus) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *MsgUpdateProjectStatus) GetSenderDid() github_com_tessornetwork_kaiju_x_iid_types.DIDFragment {
	if m != nil {
		return m.SenderDid
	}
	return ""
}

func (m *MsgUpdateProjectStatus) GetProjectDid() string {
	if m != nil {
		return m.ProjectDid
	}
	return ""
}

func (m *MsgUpdateProjectStatus) GetData() UpdateProjectStatusDoc {
	if m != nil {
		return m.Data
	}
	return UpdateProjectStatusDoc{}
}

func (m *MsgUpdateProjectStatus) GetProjectAddress() string {
	if m != nil {
		return m.ProjectAddress
	}
	return ""
}

// MsgUpdateProjectStatusResponse defines the Msg/UpdateProjectStatus response
// type.
type MsgUpdateProjectStatusResponse struct {
}

func (m *MsgUpdateProjectStatusResponse) Reset()         { *m = MsgUpdateProjectStatusResponse{} }
func (m *MsgUpdateProjectStatusResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateProjectStatusResponse) ProtoMessage()    {}
func (*MsgUpdateProjectStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab44b99427fc0961, []int{3}
}
func (m *MsgUpdateProjectStatusResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateProjectStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateProjectStatusResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateProjectStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateProjectStatusResponse.Merge(m, src)
}
func (m *MsgUpdateProjectStatusResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateProjectStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateProjectStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateProjectStatusResponse proto.InternalMessageInfo

// MsgCreateAgent defines a message for creating an agent on a project.
type MsgCreateAgent struct {
	TxHash         string                                                 `protobuf:"bytes,1,opt,name=tx_hash,json=txHash,proto3" json:"txHash" yaml:"txHash"`
	SenderDid      github_com_tessornetwork_kaiju_x_iid_types.DIDFragment `protobuf:"bytes,2,opt,name=sender_did,json=senderDid,proto3,casttype=github.com/tessornetwork/kaiju/x/iid/types.DIDFragment" json:"senderDid" yaml:"senderDid"`
	ProjectDid     string                                                 `protobuf:"bytes,3,opt,name=project_did,json=projectDid,proto3" json:"projectDid" yaml:"projectDid"`
	Data           CreateAgentDoc                                         `protobuf:"bytes,4,opt,name=data,proto3" json:"data" yaml:"iid"`
	ProjectAddress string                                                 `protobuf:"bytes,5,opt,name=project_address,json=projectAddress,proto3" json:"project_address" yaml:"project_address"`
}

func (m *MsgCreateAgent) Reset()      { *m = MsgCreateAgent{} }
func (*MsgCreateAgent) ProtoMessage() {}
func (*MsgCreateAgent) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab44b99427fc0961, []int{4}
}
func (m *MsgCreateAgent) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateAgent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateAgent.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateAgent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateAgent.Merge(m, src)
}
func (m *MsgCreateAgent) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateAgent) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateAgent.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateAgent proto.InternalMessageInfo

func (m *MsgCreateAgent) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *MsgCreateAgent) GetSenderDid() github_com_tessornetwork_kaiju_x_iid_types.DIDFragment {
	if m != nil {
		return m.SenderDid
	}
	return ""
}

func (m *MsgCreateAgent) GetProjectDid() string {
	if m != nil {
		return m.ProjectDid
	}
	return ""
}

func (m *MsgCreateAgent) GetData() CreateAgentDoc {
	if m != nil {
		return m.Data
	}
	return CreateAgentDoc{}
}

func (m *MsgCreateAgent) GetProjectAddress() string {
	if m != nil {
		return m.ProjectAddress
	}
	return ""
}

// MsgCreateAgentResponse defines the Msg/CreateAgent response type.
type MsgCreateAgentResponse struct {
}

func (m *MsgCreateAgentResponse) Reset()         { *m = MsgCreateAgentResponse{} }
func (m *MsgCreateAgentResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateAgentResponse) ProtoMessage()    {}
func (*MsgCreateAgentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab44b99427fc0961, []int{5}
}
func (m *MsgCreateAgentResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateAgentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateAgentResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateAgentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateAgentResponse.Merge(m, src)
}
func (m *MsgCreateAgentResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateAgentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateAgentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateAgentResponse proto.InternalMessageInfo

// MsgUpdateAgent defines a message for updating an agent on a project.
type MsgUpdateAgent struct {
	TxHash         string                                                 `protobuf:"bytes,1,opt,name=tx_hash,json=txHash,proto3" json:"txHash" yaml:"txHash"`
	SenderDid      github_com_tessornetwork_kaiju_x_iid_types.DIDFragment `protobuf:"bytes,2,opt,name=sender_did,json=senderDid,proto3,casttype=github.com/tessornetwork/kaiju/x/iid/types.DIDFragment" json:"senderDid" yaml:"senderDid"`
	ProjectDid     string                                                 `protobuf:"bytes,3,opt,name=project_did,json=projectDid,proto3" json:"projectDid" yaml:"projectDid"`
	Data           UpdateAgentDoc                                         `protobuf:"bytes,4,opt,name=data,proto3" json:"data" yaml:"iid"`
	ProjectAddress string                                                 `protobuf:"bytes,5,opt,name=project_address,json=projectAddress,proto3" json:"sender_address" yaml:"sender_address"`
}

func (m *MsgUpdateAgent) Reset()      { *m = MsgUpdateAgent{} }
func (*MsgUpdateAgent) ProtoMessage() {}
func (*MsgUpdateAgent) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab44b99427fc0961, []int{6}
}
func (m *MsgUpdateAgent) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateAgent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateAgent.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateAgent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateAgent.Merge(m, src)
}
func (m *MsgUpdateAgent) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateAgent) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateAgent.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateAgent proto.InternalMessageInfo

func (m *MsgUpdateAgent) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *MsgUpdateAgent) GetSenderDid() github_com_tessornetwork_kaiju_x_iid_types.DIDFragment {
	if m != nil {
		return m.SenderDid
	}
	return ""
}

func (m *MsgUpdateAgent) GetProjectDid() string {
	if m != nil {
		return m.ProjectDid
	}
	return ""
}

func (m *MsgUpdateAgent) GetData() UpdateAgentDoc {
	if m != nil {
		return m.Data
	}
	return UpdateAgentDoc{}
}

func (m *MsgUpdateAgent) GetProjectAddress() string {
	if m != nil {
		return m.ProjectAddress
	}
	return ""
}

// MsgUpdateAgentResponse defines the Msg/UpdateAgent response type.
type MsgUpdateAgentResponse struct {
}

func (m *MsgUpdateAgentResponse) Reset()         { *m = MsgUpdateAgentResponse{} }
func (m *MsgUpdateAgentResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateAgentResponse) ProtoMessage()    {}
func (*MsgUpdateAgentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab44b99427fc0961, []int{7}
}
func (m *MsgUpdateAgentResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateAgentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateAgentResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateAgentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateAgentResponse.Merge(m, src)
}
func (m *MsgUpdateAgentResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateAgentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateAgentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateAgentResponse proto.InternalMessageInfo

// MsgCreateClaim defines a message for creating a claim on a project.
type MsgCreateClaim struct {
	TxHash         string                                                 `protobuf:"bytes,1,opt,name=tx_hash,json=txHash,proto3" json:"txHash" yaml:"txHash"`
	SenderDid      github_com_tessornetwork_kaiju_x_iid_types.DIDFragment `protobuf:"bytes,2,opt,name=sender_did,json=senderDid,proto3,casttype=github.com/tessornetwork/kaiju/x/iid/types.DIDFragment" json:"senderDid" yaml:"senderDid"`
	ProjectDid     string                                                 `protobuf:"bytes,3,opt,name=project_did,json=projectDid,proto3" json:"projectDid" yaml:"projectDid"`
	Data           CreateClaimDoc                                         `protobuf:"bytes,4,opt,name=data,proto3" json:"data" yaml:"iid"`
	ProjectAddress string                                                 `protobuf:"bytes,5,opt,name=project_address,json=projectAddress,proto3" json:"project_address" yaml:"project_address"`
}

func (m *MsgCreateClaim) Reset()      { *m = MsgCreateClaim{} }
func (*MsgCreateClaim) ProtoMessage() {}
func (*MsgCreateClaim) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab44b99427fc0961, []int{8}
}
func (m *MsgCreateClaim) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateClaim) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateClaim.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateClaim) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateClaim.Merge(m, src)
}
func (m *MsgCreateClaim) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateClaim) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateClaim.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateClaim proto.InternalMessageInfo

func (m *MsgCreateClaim) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *MsgCreateClaim) GetSenderDid() github_com_tessornetwork_kaiju_x_iid_types.DIDFragment {
	if m != nil {
		return m.SenderDid
	}
	return ""
}

func (m *MsgCreateClaim) GetProjectDid() string {
	if m != nil {
		return m.ProjectDid
	}
	return ""
}

func (m *MsgCreateClaim) GetData() CreateClaimDoc {
	if m != nil {
		return m.Data
	}
	return CreateClaimDoc{}
}

func (m *MsgCreateClaim) GetProjectAddress() string {
	if m != nil {
		return m.ProjectAddress
	}
	return ""
}

// MsgCreateClaimResponse defines the Msg/CreateClaim response type.
type MsgCreateClaimResponse struct {
}

func (m *MsgCreateClaimResponse) Reset()         { *m = MsgCreateClaimResponse{} }
func (m *MsgCreateClaimResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateClaimResponse) ProtoMessage()    {}
func (*MsgCreateClaimResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab44b99427fc0961, []int{9}
}
func (m *MsgCreateClaimResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateClaimResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateClaimResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateClaimResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateClaimResponse.Merge(m, src)
}
func (m *MsgCreateClaimResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateClaimResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateClaimResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateClaimResponse proto.InternalMessageInfo

// MsgCreateEvaluation defines a message for creating an evaluation for a
// specific claim on a project.
type MsgCreateEvaluation struct {
	TxHash         string                                                 `protobuf:"bytes,1,opt,name=tx_hash,json=txHash,proto3" json:"txHash" yaml:"txHash"`
	SenderDid      github_com_tessornetwork_kaiju_x_iid_types.DIDFragment `protobuf:"bytes,2,opt,name=sender_did,json=senderDid,proto3,casttype=github.com/tessornetwork/kaiju/x/iid/types.DIDFragment" json:"senderDid" yaml:"senderDid"`
	ProjectDid     string                                                 `protobuf:"bytes,3,opt,name=project_did,json=projectDid,proto3" json:"projectDid" yaml:"projectDid"`
	Data           CreateEvaluationDoc                                    `protobuf:"bytes,4,opt,name=data,proto3" json:"data" yaml:"iid"`
	ProjectAddress string                                                 `protobuf:"bytes,5,opt,name=project_address,json=projectAddress,proto3" json:"project_address" yaml:"project_address"`
}

func (m *MsgCreateEvaluation) Reset()      { *m = MsgCreateEvaluation{} }
func (*MsgCreateEvaluation) ProtoMessage() {}
func (*MsgCreateEvaluation) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab44b99427fc0961, []int{10}
}
func (m *MsgCreateEvaluation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateEvaluation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateEvaluation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateEvaluation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateEvaluation.Merge(m, src)
}
func (m *MsgCreateEvaluation) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateEvaluation) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateEvaluation.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateEvaluation proto.InternalMessageInfo

func (m *MsgCreateEvaluation) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *MsgCreateEvaluation) GetSenderDid() github_com_tessornetwork_kaiju_x_iid_types.DIDFragment {
	if m != nil {
		return m.SenderDid
	}
	return ""
}

func (m *MsgCreateEvaluation) GetProjectDid() string {
	if m != nil {
		return m.ProjectDid
	}
	return ""
}

func (m *MsgCreateEvaluation) GetData() CreateEvaluationDoc {
	if m != nil {
		return m.Data
	}
	return CreateEvaluationDoc{}
}

func (m *MsgCreateEvaluation) GetProjectAddress() string {
	if m != nil {
		return m.ProjectAddress
	}
	return ""
}

// MsgCreateEvaluationResponse defines the Msg/CreateEvaluation response type.
type MsgCreateEvaluationResponse struct {
}

func (m *MsgCreateEvaluationResponse) Reset()         { *m = MsgCreateEvaluationResponse{} }
func (m *MsgCreateEvaluationResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateEvaluationResponse) ProtoMessage()    {}
func (*MsgCreateEvaluationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab44b99427fc0961, []int{11}
}
func (m *MsgCreateEvaluationResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateEvaluationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateEvaluationResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateEvaluationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateEvaluationResponse.Merge(m, src)
}
func (m *MsgCreateEvaluationResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateEvaluationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateEvaluationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateEvaluationResponse proto.InternalMessageInfo

// MsgWithdrawFunds defines a message for project agents to withdraw their funds
// from a project.
type MsgWithdrawFunds struct {
	SenderDid     github_com_tessornetwork_kaiju_x_iid_types.DIDFragment `protobuf:"bytes,1,opt,name=sender_did,json=senderDid,proto3,casttype=github.com/tessornetwork/kaiju/x/iid/types.DIDFragment" json:"senderDid" yaml:"senderDid"`
	Data          WithdrawFundsDoc                                       `protobuf:"bytes,2,opt,name=data,proto3" json:"data" yaml:"iid"`
	SenderAddress string                                                 `protobuf:"bytes,5,opt,name=sender_address,json=senderAddress,proto3" json:"sender_address" yaml:"sender_address"`
}

func (m *MsgWithdrawFunds) Reset()      { *m = MsgWithdrawFunds{} }
func (*MsgWithdrawFunds) ProtoMessage() {}
func (*MsgWithdrawFunds) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab44b99427fc0961, []int{12}
}
func (m *MsgWithdrawFunds) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgWithdrawFunds) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgWithdrawFunds.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgWithdrawFunds) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgWithdrawFunds.Merge(m, src)
}
func (m *MsgWithdrawFunds) XXX_Size() int {
	return m.Size()
}
func (m *MsgWithdrawFunds) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgWithdrawFunds.DiscardUnknown(m)
}

var xxx_messageInfo_MsgWithdrawFunds proto.InternalMessageInfo

func (m *MsgWithdrawFunds) GetSenderDid() github_com_tessornetwork_kaiju_x_iid_types.DIDFragment {
	if m != nil {
		return m.SenderDid
	}
	return ""
}

func (m *MsgWithdrawFunds) GetData() WithdrawFundsDoc {
	if m != nil {
		return m.Data
	}
	return WithdrawFundsDoc{}
}

func (m *MsgWithdrawFunds) GetSenderAddress() string {
	if m != nil {
		return m.SenderAddress
	}
	return ""
}

// MsgWithdrawFundsResponse defines the Msg/WithdrawFunds response type.
type MsgWithdrawFundsResponse struct {
}

func (m *MsgWithdrawFundsResponse) Reset()         { *m = MsgWithdrawFundsResponse{} }
func (m *MsgWithdrawFundsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgWithdrawFundsResponse) ProtoMessage()    {}
func (*MsgWithdrawFundsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab44b99427fc0961, []int{13}
}
func (m *MsgWithdrawFundsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgWithdrawFundsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgWithdrawFundsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgWithdrawFundsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgWithdrawFundsResponse.Merge(m, src)
}
func (m *MsgWithdrawFundsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgWithdrawFundsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgWithdrawFundsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgWithdrawFundsResponse proto.InternalMessageInfo

// MsgUpdateProjectDoc defines a message for updating a project's data.
type MsgUpdateProjectDoc struct {
	TxHash         string                                                 `protobuf:"bytes,1,opt,name=tx_hash,json=txHash,proto3" json:"txHash" yaml:"txHash"`
	SenderDid      github_com_tessornetwork_kaiju_x_iid_types.DIDFragment `protobuf:"bytes,2,opt,name=sender_did,json=senderDid,proto3,casttype=github.com/tessornetwork/kaiju/x/iid/types.DIDFragment" json:"senderDid" yaml:"senderDid"`
	ProjectDid     string                                                 `protobuf:"bytes,3,opt,name=project_did,json=projectDid,proto3" json:"projectDid" yaml:"projectDid"`
	Data           encoding_json.RawMessage                               `protobuf:"bytes,4,opt,name=data,proto3,casttype=encoding/json.RawMessage" json:"data,omitempty" yaml:"iid"`
	ProjectAddress string                                                 `protobuf:"bytes,5,opt,name=project_address,json=projectAddress,proto3" json:"project_address" yaml:"project_address"`
}

func (m *MsgUpdateProjectDoc) Reset()         { *m = MsgUpdateProjectDoc{} }
func (m *MsgUpdateProjectDoc) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateProjectDoc) ProtoMessage()    {}
func (*MsgUpdateProjectDoc) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab44b99427fc0961, []int{14}
}
func (m *MsgUpdateProjectDoc) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateProjectDoc) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateProjectDoc.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateProjectDoc) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateProjectDoc.Merge(m, src)
}
func (m *MsgUpdateProjectDoc) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateProjectDoc) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateProjectDoc.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateProjectDoc proto.InternalMessageInfo

func (m *MsgUpdateProjectDoc) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *MsgUpdateProjectDoc) GetSenderDid() github_com_tessornetwork_kaiju_x_iid_types.DIDFragment {
	if m != nil {
		return m.SenderDid
	}
	return ""
}

func (m *MsgUpdateProjectDoc) GetProjectDid() string {
	if m != nil {
		return m.ProjectDid
	}
	return ""
}

func (m *MsgUpdateProjectDoc) GetData() encoding_json.RawMessage {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *MsgUpdateProjectDoc) GetProjectAddress() string {
	if m != nil {
		return m.ProjectAddress
	}
	return ""
}

// MsgUpdateProjectDocResponse defines the Msg/UpdateProjectDoc response type.
type MsgUpdateProjectDocResponse struct {
}

func (m *MsgUpdateProjectDocResponse) Reset()         { *m = MsgUpdateProjectDocResponse{} }
func (m *MsgUpdateProjectDocResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateProjectDocResponse) ProtoMessage()    {}
func (*MsgUpdateProjectDocResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab44b99427fc0961, []int{15}
}
func (m *MsgUpdateProjectDocResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateProjectDocResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateProjectDocResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateProjectDocResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateProjectDocResponse.Merge(m, src)
}
func (m *MsgUpdateProjectDocResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateProjectDocResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateProjectDocResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateProjectDocResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgCreateProject)(nil), "kaiju.project.v1.MsgCreateProject")
	proto.RegisterType((*MsgCreateProjectResponse)(nil), "kaiju.project.v1.MsgCreateProjectResponse")
	proto.RegisterType((*MsgUpdateProjectStatus)(nil), "kaiju.project.v1.MsgUpdateProjectStatus")
	proto.RegisterType((*MsgUpdateProjectStatusResponse)(nil), "kaiju.project.v1.MsgUpdateProjectStatusResponse")
	proto.RegisterType((*MsgCreateAgent)(nil), "kaiju.project.v1.MsgCreateAgent")
	proto.RegisterType((*MsgCreateAgentResponse)(nil), "kaiju.project.v1.MsgCreateAgentResponse")
	proto.RegisterType((*MsgUpdateAgent)(nil), "kaiju.project.v1.MsgUpdateAgent")
	proto.RegisterType((*MsgUpdateAgentResponse)(nil), "kaiju.project.v1.MsgUpdateAgentResponse")
	proto.RegisterType((*MsgCreateClaim)(nil), "kaiju.project.v1.MsgCreateClaim")
	proto.RegisterType((*MsgCreateClaimResponse)(nil), "kaiju.project.v1.MsgCreateClaimResponse")
	proto.RegisterType((*MsgCreateEvaluation)(nil), "kaiju.project.v1.MsgCreateEvaluation")
	proto.RegisterType((*MsgCreateEvaluationResponse)(nil), "kaiju.project.v1.MsgCreateEvaluationResponse")
	proto.RegisterType((*MsgWithdrawFunds)(nil), "kaiju.project.v1.MsgWithdrawFunds")
	proto.RegisterType((*MsgWithdrawFundsResponse)(nil), "kaiju.project.v1.MsgWithdrawFundsResponse")
	proto.RegisterType((*MsgUpdateProjectDoc)(nil), "kaiju.project.v1.MsgUpdateProjectDoc")
	proto.RegisterType((*MsgUpdateProjectDocResponse)(nil), "kaiju.project.v1.MsgUpdateProjectDocResponse")
}

func init() { proto.RegisterFile("kaiju/project/v1/tx.proto", fileDescriptor_ab44b99427fc0961) }

var fileDescriptor_ab44b99427fc0961 = []byte{
	// 857 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x98, 0xcd, 0x4f, 0xdb, 0x48,
	0x14, 0xc0, 0x13, 0x02, 0x59, 0x31, 0x6c, 0xd8, 0xac, 0xd9, 0x45, 0xde, 0xa0, 0xb5, 0x23, 0xaf,
	0x90, 0x22, 0x56, 0xd8, 0x0b, 0xbb, 0xda, 0x03, 0x07, 0x24, 0x42, 0x16, 0xb1, 0xad, 0x22, 0x21,
	0xf7, 0x4b, 0x6d, 0x0f, 0xd1, 0x24, 0x1e, 0x39, 0x06, 0x62, 0xa7, 0x9e, 0x09, 0x24, 0xfd, 0x2b,
	0x7a, 0xec, 0xad, 0xbd, 0xf4, 0x5a, 0xf5, 0xd0, 0x53, 0xff, 0x02, 0x8e, 0x1c, 0x7b, 0xb2, 0x2a,
	0xb8, 0xe5, 0x98, 0x63, 0x4f, 0x55, 0x66, 0x1c, 0x7f, 0x24, 0x8e, 0x83, 0x2a, 0x54, 0x2a, 0x85,
	0x5b, 0x32, 0xef, 0xcd, 0xbc, 0x8f, 0xdf, 0xbc, 0xe7, 0x67, 0x83, 0xdf, 0x8e, 0xa0, 0x71, 0xd8,
	0x52, 0x9a, 0xb6, 0x75, 0x88, 0x6a, 0x44, 0x39, 0xd9, 0x50, 0x48, 0x5b, 0x6e, 0xda, 0x16, 0xb1,
	0xb8, 0x2c, 0x15, 0xc9, 0xae, 0x48, 0x3e, 0xd9, 0xc8, 0xfd, 0xa2, 0x5b, 0xba, 0x45, 0x85, 0x4a,
	0xff, 0x17, 0xd3, 0xcb, 0x09, 0x23, 0x47, 0x0c, 0xb6, 0x50, 0xb9, 0xe4, 0xa4, 0x40, 0xb6, 0x8c,
	0xf5, 0x5d, 0x1b, 0x41, 0x82, 0x0e, 0x98, 0x88, 0xfb, 0x07, 0xfc, 0x40, 0xda, 0x95, 0x3a, 0xc4,
	0x75, 0x3e, 0x99, 0x4f, 0x16, 0xe6, 0x8b, 0x2b, 0x5d, 0x47, 0x4c, 0x93, 0xf6, 0x3e, 0xc4, 0xf5,
	0x9e, 0x23, 0x66, 0x3a, 0xb0, 0x71, 0xbc, 0x25, 0xb1, 0xff, 0x92, 0xea, 0x0a, 0xb8, 0xe7, 0x00,
	0x60, 0x64, 0x6a, 0xc8, 0xae, 0x68, 0x86, 0xc6, 0xcf, 0xd0, 0x8d, 0x4f, 0xbb, 0x8e, 0x38, 0xcf,
	0x56, 0x4b, 0x86, 0xd6, 0x73, 0xc4, 0x2c, 0xdb, 0xeb, 0x2d, 0x49, 0x9f, 0x1d, 0xf1, 0x5f, 0xdd,
	0x20, 0xf5, 0x56, 0x55, 0xae, 0x59, 0x0d, 0x85, 0x20, 0x8c, 0x2d, 0xdb, 0x44, 0xe4, 0xd4, 0xb2,
	0x8f, 0x14, 0xe6, 0x7c, 0x5b, 0x31, 0x0c, 0x4d, 0x21, 0x9d, 0x26, 0xc2, 0x72, 0xe9, 0xff, 0xd2,
	0x9e, 0x0d, 0xf5, 0x06, 0x32, 0x89, 0xea, 0x1f, 0xcc, 0x95, 0xc0, 0x82, 0x1b, 0x17, 0x35, 0x9e,
	0xa2, 0xc6, 0xff, 0xe8, 0x3a, 0x22, 0x70, 0x97, 0x99, 0xf5, 0x9f, 0x99, 0x75, 0x7f, 0x4d, 0x52,
	0x03, 0x0a, 0xfd, 0xb8, 0x9b, 0xad, 0x6a, 0xe5, 0x08, 0x75, 0xf8, 0x59, 0x3f, 0xee, 0x66, 0xab,
	0x7a, 0x17, 0x75, 0xfc, 0xb8, 0xd9, 0x7f, 0x49, 0x75, 0x05, 0xdc, 0x36, 0x98, 0xd5, 0x20, 0x81,
	0xfc, 0x5c, 0x3e, 0x59, 0xf8, 0xb1, 0xb8, 0xd6, 0x73, 0x44, 0xc0, 0x14, 0x0d, 0x16, 0x1e, 0x8f,
	0xcc, 0x9a, 0xa5, 0x19, 0xa6, 0xae, 0x1c, 0x62, 0xcb, 0x94, 0x55, 0x78, 0x5a, 0x46, 0x18, 0x43,
	0x1d, 0xa9, 0x74, 0x1f, 0xf7, 0x10, 0xfc, 0x34, 0xf0, 0x1d, 0x6a, 0x9a, 0x8d, 0x30, 0xe6, 0xd3,
	0xd4, 0xfa, 0x7a, 0xd7, 0x11, 0x87, 0x45, 0x3d, 0x47, 0x5c, 0x0e, 0x05, 0x31, 0x10, 0x48, 0xea,
	0xa2, 0xbb, 0xb2, 0xc3, 0x16, 0xb6, 0x66, 0x5f, 0xbe, 0x16, 0x13, 0x52, 0x0e, 0xf0, 0xc3, 0x7c,
	0x55, 0x84, 0x9b, 0x96, 0x89, 0x91, 0xf4, 0x21, 0x05, 0x96, 0xcb, 0x58, 0x7f, 0xd0, 0xd4, 0x7c,
	0xe1, 0x3d, 0x02, 0x49, 0x0b, 0x4f, 0xed, 0x15, 0x38, 0x70, 0x61, 0xf6, 0xf9, 0x2f, 0x6c, 0x16,
	0xe4, 0xe1, 0x32, 0x93, 0x23, 0x92, 0x55, 0xb2, 0x6a, 0x45, 0xee, 0xcc, 0x11, 0x13, 0x61, 0xf4,
	0xe3, 0xf1, 0xce, 0x5d, 0x03, 0x5e, 0x29, 0x0f, 0x84, 0x68, 0x76, 0x1e, 0xde, 0x77, 0x29, 0xb0,
	0xe8, 0xb1, 0xdf, 0xd1, 0x91, 0x39, 0xbd, 0x95, 0xbd, 0x1f, 0xc2, 0x9a, 0x1f, 0xc5, 0x1a, 0x48,
	0xd2, 0x8d, 0xe0, 0x74, 0xab, 0x95, 0xa7, 0x05, 0x19, 0x70, 0xc6, 0x83, 0xf9, 0x96, 0xc1, 0x64,
	0xbc, 0x6f, 0x61, 0xc6, 0xc2, 0x0c, 0x24, 0x29, 0x1e, 0xe6, 0xfd, 0x71, 0x30, 0xff, 0xec, 0x3a,
	0xe2, 0xa2, 0x9b, 0x26, 0x9f, 0xe5, 0xaf, 0xc1, 0xac, 0x5c, 0x0d, 0x65, 0xc0, 0x95, 0xe8, 0xba,
	0xdc, 0x3d, 0x86, 0x46, 0xe3, 0x16, 0x65, 0x7c, 0x5d, 0xd2, 0x24, 0x7d, 0x2f, 0x75, 0x49, 0x9d,
	0x09, 0x3e, 0x43, 0x97, 0x3c, 0xd1, 0x7f, 0x27, 0xf0, 0xb8, 0x05, 0x89, 0x61, 0x99, 0x53, 0x4b,
	0xb4, 0x1c, 0x22, 0xba, 0x3a, 0x8e, 0xa8, 0x9f, 0xa9, 0x9b, 0xc4, 0xfa, 0x3b, 0x58, 0x89, 0x60,
	0xe7, 0xb1, 0x7d, 0x3f, 0x43, 0x87, 0xe3, 0x47, 0x06, 0xa9, 0x6b, 0x36, 0x3c, 0xdd, 0x6b, 0x99,
	0x1a, 0x1e, 0x42, 0x94, 0xfc, 0xa6, 0x88, 0xee, 0xb8, 0xc9, 0x9d, 0xa1, 0xc9, 0x95, 0x46, 0x93,
	0x1b, 0x72, 0x35, 0x3e, 0xb3, 0x2a, 0x18, 0x6a, 0x70, 0x5f, 0xd3, 0xfa, 0x32, 0x6c, 0x21, 0x6a,
	0xe4, 0x0c, 0xb9, 0xe2, 0xa5, 0xf4, 0x0d, 0x2b, 0x97, 0xd0, 0xd8, 0x52, 0xb2, 0x6a, 0x53, 0x5b,
	0x2e, 0xdb, 0x81, 0x72, 0xb9, 0xa6, 0x97, 0x87, 0x6b, 0x99, 0x2e, 0x59, 0x65, 0x0c, 0x63, 0x1a,
	0x60, 0xdc, 0x7c, 0x95, 0x06, 0xa9, 0x32, 0xd6, 0xb9, 0x0a, 0xc8, 0x84, 0x5f, 0x1d, 0x23, 0xee,
	0xe4, 0xf0, 0xeb, 0x47, 0x6e, 0x6d, 0xb2, 0xce, 0xc0, 0x10, 0xf7, 0x0c, 0x2c, 0x45, 0xbd, 0x9e,
	0x14, 0x22, 0x8f, 0x88, 0xd0, 0xcc, 0xfd, 0x75, 0x55, 0x4d, 0xcf, 0xe4, 0x63, 0xb0, 0x10, 0x1c,
	0x99, 0xf3, 0x31, 0xde, 0x52, 0x8d, 0x5c, 0x61, 0x92, 0x46, 0xf0, 0xe8, 0xe0, 0x00, 0x97, 0x8f,
	0xf1, 0x2d, 0xee, 0xe8, 0x88, 0xa1, 0xc2, 0xf7, 0x9a, 0x0d, 0x14, 0x71, 0x5e, 0x53, 0x8d, 0x58,
	0xaf, 0x43, 0x8f, 0x38, 0xae, 0x0e, 0xb2, 0x23, 0x8f, 0xb7, 0xd5, 0x98, 0xdd, 0xbe, 0x5a, 0x6e,
	0xfd, 0x4a, 0x6a, 0x9e, 0xa5, 0x0a, 0xc8, 0x84, 0x9b, 0x6d, 0xf4, 0x75, 0x0a, 0xe9, 0x8c, 0xb9,
	0x4e, 0x91, 0xed, 0xa7, 0x1f, 0xca, 0x48, 0xeb, 0x59, 0x9d, 0x7c, 0x43, 0x4a, 0x56, 0x6d, 0x4c,
	0x28, 0xe3, 0x2a, 0xa4, 0xb8, 0x7f, 0x76, 0x21, 0x24, 0xcf, 0x2f, 0x84, 0xe4, 0xa7, 0x0b, 0x21,
	0xf9, 0xe2, 0x52, 0x48, 0x9c, 0x5f, 0x0a, 0x89, 0x8f, 0x97, 0x42, 0xe2, 0x89, 0x3c, 0xb1, 0xf7,
	0x0c, 0xbe, 0xd6, 0xd0, 0xfe, 0x53, 0x4d, 0xd3, 0x2f, 0x35, 0x7f, 0x7f, 0x09, 0x00, 0x00, 0xff,
	0xff, 0x77, 0x17, 0x62, 0x43, 0x0e, 0x12, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// CreateProject defines a method for creating a project.
	CreateProject(ctx context.Context, in *MsgCreateProject, opts ...grpc.CallOption) (*MsgCreateProjectResponse, error)
	// UpdateProjectStatus defines a method for updating a project's current
	// status.
	UpdateProjectStatus(ctx context.Context, in *MsgUpdateProjectStatus, opts ...grpc.CallOption) (*MsgUpdateProjectStatusResponse, error)
	// CreateAgent defines a method for creating an agent on a project.
	CreateAgent(ctx context.Context, in *MsgCreateAgent, opts ...grpc.CallOption) (*MsgCreateAgentResponse, error)
	// UpdateAgent defines a method for updating an agent on a project.
	UpdateAgent(ctx context.Context, in *MsgUpdateAgent, opts ...grpc.CallOption) (*MsgUpdateAgentResponse, error)
	// CreateClaim defines a method for creating a claim on a project.
	CreateClaim(ctx context.Context, in *MsgCreateClaim, opts ...grpc.CallOption) (*MsgCreateClaimResponse, error)
	// CreateEvaluation defines a method for creating an evaluation for a specific
	// claim on a project.
	CreateEvaluation(ctx context.Context, in *MsgCreateEvaluation, opts ...grpc.CallOption) (*MsgCreateEvaluationResponse, error)
	// WithdrawFunds defines a method for project agents to withdraw their funds
	// from a project.
	WithdrawFunds(ctx context.Context, in *MsgWithdrawFunds, opts ...grpc.CallOption) (*MsgWithdrawFundsResponse, error)
	// UpdateProjectDoc defines a method for updating a project's data.
	UpdateProjectDoc(ctx context.Context, in *MsgUpdateProjectDoc, opts ...grpc.CallOption) (*MsgUpdateProjectDocResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreateProject(ctx context.Context, in *MsgCreateProject, opts ...grpc.CallOption) (*MsgCreateProjectResponse, error) {
	out := new(MsgCreateProjectResponse)
	err := c.cc.Invoke(ctx, "/kaiju.project.v1.Msg/CreateProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateProjectStatus(ctx context.Context, in *MsgUpdateProjectStatus, opts ...grpc.CallOption) (*MsgUpdateProjectStatusResponse, error) {
	out := new(MsgUpdateProjectStatusResponse)
	err := c.cc.Invoke(ctx, "/kaiju.project.v1.Msg/UpdateProjectStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateAgent(ctx context.Context, in *MsgCreateAgent, opts ...grpc.CallOption) (*MsgCreateAgentResponse, error) {
	out := new(MsgCreateAgentResponse)
	err := c.cc.Invoke(ctx, "/kaiju.project.v1.Msg/CreateAgent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateAgent(ctx context.Context, in *MsgUpdateAgent, opts ...grpc.CallOption) (*MsgUpdateAgentResponse, error) {
	out := new(MsgUpdateAgentResponse)
	err := c.cc.Invoke(ctx, "/kaiju.project.v1.Msg/UpdateAgent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateClaim(ctx context.Context, in *MsgCreateClaim, opts ...grpc.CallOption) (*MsgCreateClaimResponse, error) {
	out := new(MsgCreateClaimResponse)
	err := c.cc.Invoke(ctx, "/kaiju.project.v1.Msg/CreateClaim", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateEvaluation(ctx context.Context, in *MsgCreateEvaluation, opts ...grpc.CallOption) (*MsgCreateEvaluationResponse, error) {
	out := new(MsgCreateEvaluationResponse)
	err := c.cc.Invoke(ctx, "/kaiju.project.v1.Msg/CreateEvaluation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) WithdrawFunds(ctx context.Context, in *MsgWithdrawFunds, opts ...grpc.CallOption) (*MsgWithdrawFundsResponse, error) {
	out := new(MsgWithdrawFundsResponse)
	err := c.cc.Invoke(ctx, "/kaiju.project.v1.Msg/WithdrawFunds", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateProjectDoc(ctx context.Context, in *MsgUpdateProjectDoc, opts ...grpc.CallOption) (*MsgUpdateProjectDocResponse, error) {
	out := new(MsgUpdateProjectDocResponse)
	err := c.cc.Invoke(ctx, "/kaiju.project.v1.Msg/UpdateProjectDoc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// CreateProject defines a method for creating a project.
	CreateProject(context.Context, *MsgCreateProject) (*MsgCreateProjectResponse, error)
	// UpdateProjectStatus defines a method for updating a project's current
	// status.
	UpdateProjectStatus(context.Context, *MsgUpdateProjectStatus) (*MsgUpdateProjectStatusResponse, error)
	// CreateAgent defines a method for creating an agent on a project.
	CreateAgent(context.Context, *MsgCreateAgent) (*MsgCreateAgentResponse, error)
	// UpdateAgent defines a method for updating an agent on a project.
	UpdateAgent(context.Context, *MsgUpdateAgent) (*MsgUpdateAgentResponse, error)
	// CreateClaim defines a method for creating a claim on a project.
	CreateClaim(context.Context, *MsgCreateClaim) (*MsgCreateClaimResponse, error)
	// CreateEvaluation defines a method for creating an evaluation for a specific
	// claim on a project.
	CreateEvaluation(context.Context, *MsgCreateEvaluation) (*MsgCreateEvaluationResponse, error)
	// WithdrawFunds defines a method for project agents to withdraw their funds
	// from a project.
	WithdrawFunds(context.Context, *MsgWithdrawFunds) (*MsgWithdrawFundsResponse, error)
	// UpdateProjectDoc defines a method for updating a project's data.
	UpdateProjectDoc(context.Context, *MsgUpdateProjectDoc) (*MsgUpdateProjectDocResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreateProject(ctx context.Context, req *MsgCreateProject) (*MsgCreateProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateProject not implemented")
}
func (*UnimplementedMsgServer) UpdateProjectStatus(ctx context.Context, req *MsgUpdateProjectStatus) (*MsgUpdateProjectStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateProjectStatus not implemented")
}
func (*UnimplementedMsgServer) CreateAgent(ctx context.Context, req *MsgCreateAgent) (*MsgCreateAgentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAgent not implemented")
}
func (*UnimplementedMsgServer) UpdateAgent(ctx context.Context, req *MsgUpdateAgent) (*MsgUpdateAgentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAgent not implemented")
}
func (*UnimplementedMsgServer) CreateClaim(ctx context.Context, req *MsgCreateClaim) (*MsgCreateClaimResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateClaim not implemented")
}
func (*UnimplementedMsgServer) CreateEvaluation(ctx context.Context, req *MsgCreateEvaluation) (*MsgCreateEvaluationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateEvaluation not implemented")
}
func (*UnimplementedMsgServer) WithdrawFunds(ctx context.Context, req *MsgWithdrawFunds) (*MsgWithdrawFundsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WithdrawFunds not implemented")
}
func (*UnimplementedMsgServer) UpdateProjectDoc(ctx context.Context, req *MsgUpdateProjectDoc) (*MsgUpdateProjectDocResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateProjectDoc not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreateProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateProject)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kaiju.project.v1.Msg/CreateProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateProject(ctx, req.(*MsgCreateProject))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateProjectStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateProjectStatus)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateProjectStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kaiju.project.v1.Msg/UpdateProjectStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateProjectStatus(ctx, req.(*MsgUpdateProjectStatus))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateAgent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateAgent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateAgent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kaiju.project.v1.Msg/CreateAgent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateAgent(ctx, req.(*MsgCreateAgent))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateAgent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateAgent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateAgent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kaiju.project.v1.Msg/UpdateAgent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateAgent(ctx, req.(*MsgUpdateAgent))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateClaim_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateClaim)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateClaim(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kaiju.project.v1.Msg/CreateClaim",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateClaim(ctx, req.(*MsgCreateClaim))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateEvaluation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateEvaluation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateEvaluation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kaiju.project.v1.Msg/CreateEvaluation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateEvaluation(ctx, req.(*MsgCreateEvaluation))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_WithdrawFunds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgWithdrawFunds)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).WithdrawFunds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kaiju.project.v1.Msg/WithdrawFunds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).WithdrawFunds(ctx, req.(*MsgWithdrawFunds))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateProjectDoc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateProjectDoc)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateProjectDoc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kaiju.project.v1.Msg/UpdateProjectDoc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateProjectDoc(ctx, req.(*MsgUpdateProjectDoc))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kaiju.project.v1.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateProject",
			Handler:    _Msg_CreateProject_Handler,
		},
		{
			MethodName: "UpdateProjectStatus",
			Handler:    _Msg_UpdateProjectStatus_Handler,
		},
		{
			MethodName: "CreateAgent",
			Handler:    _Msg_CreateAgent_Handler,
		},
		{
			MethodName: "UpdateAgent",
			Handler:    _Msg_UpdateAgent_Handler,
		},
		{
			MethodName: "CreateClaim",
			Handler:    _Msg_CreateClaim_Handler,
		},
		{
			MethodName: "CreateEvaluation",
			Handler:    _Msg_CreateEvaluation_Handler,
		},
		{
			MethodName: "WithdrawFunds",
			Handler:    _Msg_WithdrawFunds_Handler,
		},
		{
			MethodName: "UpdateProjectDoc",
			Handler:    _Msg_UpdateProjectDoc_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "kaiju/project/v1/tx.proto",
}

func (m *MsgCreateProject) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateProject) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateProject) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ProjectAddress) > 0 {
		i -= len(m.ProjectAddress)
		copy(dAtA[i:], m.ProjectAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ProjectAddress)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Data) > 0 {
		i -= len(m.Data)
		copy(dAtA[i:], m.Data)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Data)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.PubKey) > 0 {
		i -= len(m.PubKey)
		copy(dAtA[i:], m.PubKey)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PubKey)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ProjectDid) > 0 {
		i -= len(m.ProjectDid)
		copy(dAtA[i:], m.ProjectDid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ProjectDid)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.SenderDid) > 0 {
		i -= len(m.SenderDid)
		copy(dAtA[i:], m.SenderDid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SenderDid)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.TxHash) > 0 {
		i -= len(m.TxHash)
		copy(dAtA[i:], m.TxHash)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TxHash)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateProjectResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateProjectResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateProjectResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateProjectStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateProjectStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateProjectStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ProjectAddress) > 0 {
		i -= len(m.ProjectAddress)
		copy(dAtA[i:], m.ProjectAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ProjectAddress)))
		i--
		dAtA[i] = 0x2a
	}
	{
		size, err := m.Data.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x22
	if len(m.ProjectDid) > 0 {
		i -= len(m.ProjectDid)
		copy(dAtA[i:], m.ProjectDid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ProjectDid)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.SenderDid) > 0 {
		i -= len(m.SenderDid)
		copy(dAtA[i:], m.SenderDid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SenderDid)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.TxHash) > 0 {
		i -= len(m.TxHash)
		copy(dAtA[i:], m.TxHash)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TxHash)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateProjectStatusResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateProjectStatusResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateProjectStatusResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateAgent) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateAgent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateAgent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ProjectAddress) > 0 {
		i -= len(m.ProjectAddress)
		copy(dAtA[i:], m.ProjectAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ProjectAddress)))
		i--
		dAtA[i] = 0x2a
	}
	{
		size, err := m.Data.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x22
	if len(m.ProjectDid) > 0 {
		i -= len(m.ProjectDid)
		copy(dAtA[i:], m.ProjectDid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ProjectDid)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.SenderDid) > 0 {
		i -= len(m.SenderDid)
		copy(dAtA[i:], m.SenderDid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SenderDid)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.TxHash) > 0 {
		i -= len(m.TxHash)
		copy(dAtA[i:], m.TxHash)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TxHash)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateAgentResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateAgentResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateAgentResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateAgent) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateAgent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateAgent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ProjectAddress) > 0 {
		i -= len(m.ProjectAddress)
		copy(dAtA[i:], m.ProjectAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ProjectAddress)))
		i--
		dAtA[i] = 0x2a
	}
	{
		size, err := m.Data.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x22
	if len(m.ProjectDid) > 0 {
		i -= len(m.ProjectDid)
		copy(dAtA[i:], m.ProjectDid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ProjectDid)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.SenderDid) > 0 {
		i -= len(m.SenderDid)
		copy(dAtA[i:], m.SenderDid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SenderDid)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.TxHash) > 0 {
		i -= len(m.TxHash)
		copy(dAtA[i:], m.TxHash)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TxHash)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateAgentResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateAgentResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateAgentResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateClaim) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateClaim) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateClaim) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ProjectAddress) > 0 {
		i -= len(m.ProjectAddress)
		copy(dAtA[i:], m.ProjectAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ProjectAddress)))
		i--
		dAtA[i] = 0x2a
	}
	{
		size, err := m.Data.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x22
	if len(m.ProjectDid) > 0 {
		i -= len(m.ProjectDid)
		copy(dAtA[i:], m.ProjectDid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ProjectDid)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.SenderDid) > 0 {
		i -= len(m.SenderDid)
		copy(dAtA[i:], m.SenderDid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SenderDid)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.TxHash) > 0 {
		i -= len(m.TxHash)
		copy(dAtA[i:], m.TxHash)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TxHash)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateClaimResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateClaimResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateClaimResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateEvaluation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateEvaluation) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateEvaluation) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ProjectAddress) > 0 {
		i -= len(m.ProjectAddress)
		copy(dAtA[i:], m.ProjectAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ProjectAddress)))
		i--
		dAtA[i] = 0x2a
	}
	{
		size, err := m.Data.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x22
	if len(m.ProjectDid) > 0 {
		i -= len(m.ProjectDid)
		copy(dAtA[i:], m.ProjectDid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ProjectDid)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.SenderDid) > 0 {
		i -= len(m.SenderDid)
		copy(dAtA[i:], m.SenderDid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SenderDid)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.TxHash) > 0 {
		i -= len(m.TxHash)
		copy(dAtA[i:], m.TxHash)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TxHash)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateEvaluationResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateEvaluationResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateEvaluationResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgWithdrawFunds) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgWithdrawFunds) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgWithdrawFunds) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.SenderAddress) > 0 {
		i -= len(m.SenderAddress)
		copy(dAtA[i:], m.SenderAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SenderAddress)))
		i--
		dAtA[i] = 0x2a
	}
	{
		size, err := m.Data.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.SenderDid) > 0 {
		i -= len(m.SenderDid)
		copy(dAtA[i:], m.SenderDid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SenderDid)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgWithdrawFundsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgWithdrawFundsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgWithdrawFundsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateProjectDoc) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateProjectDoc) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateProjectDoc) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ProjectAddress) > 0 {
		i -= len(m.ProjectAddress)
		copy(dAtA[i:], m.ProjectAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ProjectAddress)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Data) > 0 {
		i -= len(m.Data)
		copy(dAtA[i:], m.Data)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Data)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ProjectDid) > 0 {
		i -= len(m.ProjectDid)
		copy(dAtA[i:], m.ProjectDid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ProjectDid)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.SenderDid) > 0 {
		i -= len(m.SenderDid)
		copy(dAtA[i:], m.SenderDid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SenderDid)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.TxHash) > 0 {
		i -= len(m.TxHash)
		copy(dAtA[i:], m.TxHash)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TxHash)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateProjectDocResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateProjectDocResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateProjectDocResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateProject) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.TxHash)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SenderDid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ProjectDid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PubKey)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Data)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ProjectAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateProjectResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateProjectStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.TxHash)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SenderDid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ProjectDid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Data.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.ProjectAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateProjectStatusResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateAgent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.TxHash)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SenderDid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ProjectDid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Data.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.ProjectAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateAgentResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateAgent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.TxHash)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SenderDid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ProjectDid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Data.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.ProjectAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateAgentResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateClaim) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.TxHash)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SenderDid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ProjectDid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Data.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.ProjectAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateClaimResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateEvaluation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.TxHash)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SenderDid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ProjectDid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Data.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.ProjectAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateEvaluationResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgWithdrawFunds) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.SenderDid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Data.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.SenderAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgWithdrawFundsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateProjectDoc) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.TxHash)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SenderDid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ProjectDid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Data)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ProjectAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateProjectDocResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateProject) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateProject: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateProject: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TxHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderDid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SenderDid = github_com_tessornetwork_kaiju_x_iid_types.DIDFragment(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProjectDid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProjectDid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PubKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PubKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data[:0], dAtA[iNdEx:postIndex]...)
			if m.Data == nil {
				m.Data = []byte{}
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProjectAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProjectAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateProjectResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateProjectResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateProjectResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateProjectStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateProjectStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateProjectStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TxHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderDid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SenderDid = github_com_tessornetwork_kaiju_x_iid_types.DIDFragment(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProjectDid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProjectDid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProjectAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProjectAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateProjectStatusResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateProjectStatusResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateProjectStatusResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateAgent) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateAgent: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateAgent: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TxHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderDid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SenderDid = github_com_tessornetwork_kaiju_x_iid_types.DIDFragment(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProjectDid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProjectDid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProjectAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProjectAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateAgentResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateAgentResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateAgentResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateAgent) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateAgent: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateAgent: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TxHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderDid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SenderDid = github_com_tessornetwork_kaiju_x_iid_types.DIDFragment(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProjectDid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProjectDid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProjectAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProjectAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateAgentResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateAgentResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateAgentResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateClaim) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateClaim: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateClaim: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TxHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderDid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SenderDid = github_com_tessornetwork_kaiju_x_iid_types.DIDFragment(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProjectDid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProjectDid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProjectAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProjectAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateClaimResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateClaimResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateClaimResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateEvaluation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateEvaluation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateEvaluation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TxHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderDid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SenderDid = github_com_tessornetwork_kaiju_x_iid_types.DIDFragment(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProjectDid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProjectDid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProjectAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProjectAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateEvaluationResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateEvaluationResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateEvaluationResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgWithdrawFunds) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgWithdrawFunds: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgWithdrawFunds: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderDid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SenderDid = github_com_tessornetwork_kaiju_x_iid_types.DIDFragment(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SenderAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgWithdrawFundsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgWithdrawFundsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgWithdrawFundsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateProjectDoc) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateProjectDoc: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateProjectDoc: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TxHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderDid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SenderDid = github_com_tessornetwork_kaiju_x_iid_types.DIDFragment(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProjectDid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProjectDid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data[:0], dAtA[iNdEx:postIndex]...)
			if m.Data == nil {
				m.Data = []byte{}
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProjectAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProjectAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateProjectDocResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateProjectDocResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateProjectDocResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
